apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "solr-config"
  labels:
    app: solr-app
data:
  solrHome: "/store/data"
  solrPort: "8983"
  zkHost: "zk-0.zk-hs.default.svc.cluster.local,zk-1.zk-hs.default.svc.cluster.local,zk-2.zk-hs.default.svc.cluster.local"
  solrLogsDir: "/store/logs"
---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "solr-config-xml"
  labels:
    app: solr-app
data:
  solr.xml: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <solr>
        <!--Hello World-->
        <solrcloud>
            <str name="host">${host:}</str>
            <int name="hostPort">${jetty.port:8983}</int>
            <str name="hostContext">${hostContext:solr}</str>

            <bool name="genericCoreNodeNames">${genericCoreNodeNames:true}</bool>

            <int name="zkClientTimeout">${zkClientTimeout:30000}</int>
            <int name="distribUpdateSoTimeout">${distribUpdateSoTimeout:600000}</int>
            <int name="distribUpdateConnTimeout">${distribUpdateConnTimeout:60000}</int>
            <str name="zkCredentialsProvider">${zkCredentialsProvider:org.apache.solr.common.cloud.DefaultZkCredentialsProvider}</str>
            <str name="zkACLProvider">${zkACLProvider:org.apache.solr.common.cloud.DefaultZkACLProvider}</str>
        </solrcloud>
        <shardHandlerFactory name="shardHandlerFactory" class="HttpShardHandlerFactory">
            <int name="socketTimeout">${socketTimeout:600000}</int>
            <int name="connTimeout">${connTimeout:60000}</int>
        </shardHandlerFactory>
    </solr>
---
apiVersion: v1
kind: Service
metadata:
  name: solr-hs
  labels:
    app: solr-app
spec:
  ports:
  - port: 8983
  clusterIP: None
  selector:
    app: solr-app
---
apiVersion: v1
kind: Service
metadata:
  name: solr-cs
  labels:
    app: solr-app
spec:
  ports:
  - port: 8983
    name: client
  selector:
    app: solr-app
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: solr-pdb
spec:
  selector:
    matchLabels:
      app: solr-app
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: solr
spec:
  selector:
    matchLabels:
      app: solr-app # has to match .spec.template.metadata.labels
  serviceName: "solr-hs"
  replicas: 3 
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: solr-app # has to match .spec.selector.matchLabels
    spec:
      volumes:
        - name: solr-xml
          configMap:
            name: solr-config-xml
            items:
            - key: solr.xml
              path: solr.xml
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - solr-app
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: solr
        image: solr:7.7.1
        resources:
          requests:
            memory: "512Mi"
            cpu: "0.1"
        volumeMounts:
        - name: volsolr
          mountPath: /store
        ports:
        - name: solr-port
          containerPort: 8983
        env:
          - name: "SOLR_JAVA_MEM"
            value: "-Xms256m -Xmx512m"
          - name: SOLR_HOME
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrHome
          - name: SOLR_PORT
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrPort
          - name: ZK_HOST
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: zkHost
          - name: POD_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SOLR_HOST
            value: "$(POD_HOST_NAME).solr-hs.default.svc.cluster.local"
          - name: SOLR_LOGS_DIR
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrLogsDir
        livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            httpGet:
              scheme: "HTTP"
              path: /solr/admin/info/system
              port: 8983
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 5
          httpGet:
            scheme: "HTTP"
            path: /solr/admin/info/system
            port: 8983
      initContainers:
      - name: init-solr-data
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/data && chown 8983:8983 /store/data']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-logs
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/logs && chown 8983:8983 /store/logs']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-xml
        image: solr:7.7.1
        command: ['sh', '-c', '[ ! -f /store/data/solr.xml ] && cp /solrxmlinit/solr.xml /store/data/solr.xml || true']
        volumeMounts:
        - name: volsolr
          mountPath: /store
        - name: solr-xml
          mountPath: /solrxmlinit
  volumeClaimTemplates:
    - metadata:
        name: volsolr
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi